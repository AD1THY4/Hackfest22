{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from \"react\";\nimport { CardonManager } from \"./CardonManager\";\n/**\r\n * Wraps the component you want to make reusable and returns the `'show'` and `'hide'` functions within an object.\r\n *\r\n * @template P The type of props value\r\n * @template R The type of return value\r\n * @param component The component to show.\r\n * @param options Options\r\n * @returns\r\n * ```\r\n * {\r\n *   show: (args?: P, callback?: (result: P) => void): Promise<R>,\r\n *   hide: () => void,\r\n * }\r\n * ```\r\n */\n\nexport function withCardon(component, options) {\n  var onShow = function () {};\n\n  function WithCardonEnchanted() {\n    var _a = React.useState({\n      props: {},\n      resolve: function (data) {}\n    }),\n        params = _a[0],\n        setParams = _a[1];\n\n    var _b = React.useState(false),\n        visible = _b[0],\n        setVisible = _b[1];\n\n    onShow = function (resolve, params) {\n      setParams({\n        props: params || {},\n        resolve: resolve\n      });\n      setVisible(true);\n    };\n\n    var get = function (data) {\n      return function () {\n        params.resolve(data);\n        setVisible(false);\n      };\n    };\n\n    var customProps = {\n      get: get,\n      visible: visible\n    };\n    if ((options === null || options === void 0 ? void 0 : options.destroyOnHide) && !visible) return null;\n    var Component = component;\n    return _jsx(Component, __assign({}, params.props, customProps), void 0);\n  }\n\n  CardonManager.append(WithCardonEnchanted);\n\n  var resolveFunc = function (value) {};\n\n  var show = function (props, callback) {\n    var promise = new Promise(function (resolve) {\n      onShow(resolve, props);\n      resolveFunc = resolve;\n    });\n\n    if (callback && typeof callback === \"function\") {\n      promise.then(function (data) {\n        return callback(data);\n      });\n    }\n\n    return promise;\n  };\n\n  var hide = function () {\n    if (resolveFunc) {\n      resolveFunc(null);\n\n      resolveFunc = function (value) {};\n    }\n  };\n\n  var result = {\n    show: show,\n    hide: hide\n  };\n  return result;\n}","map":{"version":3,"sources":["C:/Users/adith/Downloads/react-website-v1-master/react-website-v1-master/node_modules/cardon/lib/withCardon.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","jsx","_jsx","React","CardonManager","withCardon","component","options","onShow","WithCardonEnchanted","_a","useState","props","resolve","data","params","setParams","_b","visible","setVisible","get","customProps","destroyOnHide","Component","append","resolveFunc","value","show","callback","promise","Promise","then","hide","result"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport React from \"react\";\r\nimport { CardonManager } from \"./CardonManager\";\r\n/**\r\n * Wraps the component you want to make reusable and returns the `'show'` and `'hide'` functions within an object.\r\n *\r\n * @template P The type of props value\r\n * @template R The type of return value\r\n * @param component The component to show.\r\n * @param options Options\r\n * @returns\r\n * ```\r\n * {\r\n *   show: (args?: P, callback?: (result: P) => void): Promise<R>,\r\n *   hide: () => void,\r\n * }\r\n * ```\r\n */\r\nexport function withCardon(component, options) {\r\n    var onShow = function () { };\r\n    function WithCardonEnchanted() {\r\n        var _a = React.useState({ props: {}, resolve: function (data) { } }), params = _a[0], setParams = _a[1];\r\n        var _b = React.useState(false), visible = _b[0], setVisible = _b[1];\r\n        onShow = function (resolve, params) {\r\n            setParams({ props: params || {}, resolve: resolve });\r\n            setVisible(true);\r\n        };\r\n        var get = function (data) { return function () {\r\n            params.resolve(data);\r\n            setVisible(false);\r\n        }; };\r\n        var customProps = {\r\n            get: get,\r\n            visible: visible\r\n        };\r\n        if ((options === null || options === void 0 ? void 0 : options.destroyOnHide) && !visible)\r\n            return null;\r\n        var Component = component;\r\n        return (_jsx(Component, __assign({}, params.props, customProps), void 0));\r\n    }\r\n    CardonManager.append(WithCardonEnchanted);\r\n    var resolveFunc = function (value) { };\r\n    var show = function (props, callback) {\r\n        var promise = new Promise(function (resolve) {\r\n            onShow(resolve, props);\r\n            resolveFunc = resolve;\r\n        });\r\n        if (callback && typeof callback === \"function\") {\r\n            promise.then(function (data) { return callback(data); });\r\n        }\r\n        return promise;\r\n    };\r\n    var hide = function () {\r\n        if (resolveFunc) {\r\n            resolveFunc(null);\r\n            resolveFunc = function (value) { };\r\n        }\r\n    };\r\n    var result = {\r\n        show: show,\r\n        hide: hide\r\n    };\r\n    return result;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}